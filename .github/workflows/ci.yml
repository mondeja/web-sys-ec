name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  qa:
    name: QA
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job: [pre-commit, lychee, cargo-machete]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        if: matrix.job == 'cargo-machete'
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          profile: minimal
      - name: Set up Python
        if: matrix.job == 'pre-commit'
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        if: matrix.job == 'pre-commit'
        run: |
          pip install --upgrade pip
          pip install pre-commit
      - name: Lint
        if: matrix.job == 'pre-commit'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 25
          max_attempts: 3
          retry_wait_seconds: 15
          warning_on_retry: false
          command: pre-commit run --all-files --show-diff-on-failure
      - name: Restore lychee cache
        if: matrix.job == 'lychee'
        uses: actions/cache@v4
        with:
          path: .lycheecache
          key: cache-lychee-${{ github.sha }}
          restore-keys: cache-lychee-
      - name: Run Lychee
        if: matrix.job == 'lychee'
        uses: lycheeverse/lychee-action@v2
        with:
          args: "--cache --max-cache-age 1d ."
      - uses: taiki-e/install-action@v2
        if: matrix.job == 'cargo-machete'
        with:
          tool: cargo-machete
      - name: Run cargo-machete
        if: matrix.job == 'cargo-machete'
        run: cargo machete --skip-target-dir

  unit-tests:
    name: Unit tests
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          profile: minimal
          targets: wasm32-unknown-unknown
      - name: Install wasm-pack
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-pack
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-unit-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Run unit tests
        run: cargo test

  test-release:
    needs:
      - qa
      - unit-tests
    if: |
      '${{ github.event.pull_request.user.login }}' == 'mondeja' ||
      startsWith(github.ref, 'refs/tags/') ||
      github.ref == 'refs/heads/master'
    name: Test release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          profile: minimal
      - name: Publish
        run: |
          cargo login ${{ secrets.CRATES_TOKEN }}
          cargo publish -v --dry-run

  release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Release web-sys-ec
    needs: test-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: stable
          profile: minimal
      - name: Publish
        run: |
          cargo login ${{ secrets.CRATES_TOKEN }}
          cargo publish -v

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Create release
    needs: release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get tag metadata
        id: tag
        run: |
          TAG_TITLE=${GITHUB_REF#refs/*/}
          echo "title=$TAG_TITLE" >> $GITHUB_OUTPUT
      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.tag.outputs.title }}
          tag_name: ${{ steps.tag.outputs.title }}
          body: |
            See [CHANGELOG](https://github.com/mondeja/web-sys-ec/blob/master/CHANGELOG.md).
          draft: false
          prerelease: false
